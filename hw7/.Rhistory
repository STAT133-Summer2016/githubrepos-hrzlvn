summarise(max_count = max(count))
lingData <- left_join(df, lingData)
lingData <- lingData %>%
filter(max_count == count) %>%
group_by(STATE, question, max_count) %>%
summarise(choice = list(choice)) %>%
mutate(answer = NA)
lingData <- lingData %>%
select(STATE, question, max_count, answer) %>%
filter(STATE %in% state.abb)
for (i in 1:nrow(lingData)) {
r <- lingData[i, ]
max_ans_choice <- unlist(r$choice)
question_num <- r$question
answer <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
collapse = "/")
lingData[i, ]$answer <- answer
}
View(lingData)
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData <- left_join(table, lingData) %>%
mutate(region = str_to_lower(region))
states <- map_data("state")
lingData <- left_join(states, lingData)
write.csv(lingData, "lingData.csv")
runApp()
runApp()
runApp()
runApp()
data.frame()
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData = lingData %>%
select(STATE, CITY, ZIP, lat, long) %>%
left_join(most_common_answer) %>%
left_join(table) %>%
mutate(region = str_to_lower(region))
View(lingData)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(lingData, "cleaned_lingData.csv")
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData = lingData %>%
select(STATE, CITY, ZIP, lat, long) %>%
left_join(most_common_answer) %>%
left_join(table) %>%
mutate(region = str_to_lower(region))
View(lingData)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(lingData, "cleaned_lingData.csv")
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData = lingData %>%
select(STATE, CITY, ZIP, lat, long) %>%
left_join(most_common_answer) %>%
left_join(table) %>%
mutate(region = str_to_lower(region))
setwd("~/Dropbox/Stats133/git/hw7")
knitr::opts_chunk$set(echo = TRUE)
# libraries go here
library(knitr)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(dplyr)
library(stringr)
library(rvest)
library(readr)
library(tidyr)
library(shiny)
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData = lingData %>%
select(STATE, CITY, ZIP, lat, long) %>%
left_join(most_common_answer) %>%
left_join(table) %>%
mutate(region = str_to_lower(region))
View(lingData)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(lingData, "cleaned_lingData.csv")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
lingData = lingData %>%
select(STATE) %>%
left_join(most_common_answer) %>%
left_join(table) %>%
mutate(region = str_to_lower(region))
View(lingData)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(lingData, "cleaned_lingData.csv")
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question)
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
setwd("~/Dropbox/Stats133/git/hw7")
knitr::opts_chunk$set(echo = TRUE)
# libraries go here
library(knitr)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(dplyr)
library(stringr)
library(rvest)
library(readr)
library(tidyr)
library(shiny)
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
most_common_answer
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table)
most_common_answer
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region)) %>%
left_join(map_data("state"))
most_common_answer
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region)) %>%
left_join(map_data("state"))
most_common_answer
table
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table)
most_common_answer
map_data("state")
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region))
most_common_answer = left_join(map_data("state"), most_common_answer)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(lingData, "cleaned_lingData.csv")
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region))
most_common_answer = left_join(map_data("state"), most_common_answer)
question_index = (unique(lingData$question, "question.csv"))
question_index = question_index[!is.na(question_index)]
write.csv(question_index, "questions.csv")
write.csv(most_common_answer, "cleaned_lingData.csv")
most_common_answer
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region))
most_common_answer
states = map_data("state")
most_common_answer = left_join(states, most_common_answer)
most_common_answer
# Your cleaning code.
load("question_data.RData")
lingData <- read_delim("lingData.txt", delim = " ")
lingLoc <- read_delim("lingLocation.txt", delim = " ")
most_common_answer = lingData %>%
gather(key = question, value = answer, -ID, -CITY, -STATE, -ZIP, -lat, -long) %>%
mutate(num = 1, question = as.numeric(str_replace_all(question, "(^[Q][0]?)(.*)", "\\2"))) %>%
group_by(STATE, question, answer) %>%
summarise(count = sum(num)) %>%
filter(STATE %in% state.abb) %>%
group_by(STATE, question) %>%
filter(count == max(count))
# for (i in 1:nrow(lingData)) {
#   r <- lingData[i, ]
#   max_ans_choice <- unlist(r$answer)
#   question_num <- r$question
#   answer_as_words <- paste(as.character(all.ans[[question_num]][max_ans_choice, ]$ans),
#                   collapse = "/")
#   lingData[i, ]$answer_as_words <- answer_as_words
# }
table <- read_html("http://state.1keydata.com/state-abbreviations.php") %>%
html_nodes(xpath="//table[@class='content1']") %>%
.[1] %>%
html_table(fill = TRUE) %>%
data.frame()
names(table) <- c("region", "STATE", "region", "STATE")
table <- rbind(table[1:2], table[3:4]) %>%
filter(region != "Name", STATE != "Abbreviation")
most_common_answer = most_common_answer %>%
left_join(table) %>%
mutate(region = tolower(region))
states = map_data("state")
most_common_answer
states
most_common_answer
left_join(states, most_common_answer)
